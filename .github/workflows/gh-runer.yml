# Build the Buildroot and make SDK

name: GitHub Runer

# Triggers the workflow on push or pull request events
on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Make a release'
        required: true
        default: 'false'
        type: choice
        options:
          - false
          - true
  
env:
  isRelease: ${{ github.event.inputs.release == 'true' || (github.event.pull_request.merged == true && github.event.pull_request.state == 'closed' && github.event.pull_request.base.ref == 'master') }}

jobs:
  build-buildroot:
    # runs-on: ubuntu-20.04
    # for test self-hosted
    # runs-on: self-hosted
    runs-on: ubuntu-20.04-32-cores

    steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
            path: buildroot-rk3588
      
        - name: Write SSH keys and pull submodules
          working-directory: ./buildroot-rk3588
          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            host='github.com'
            hosts="$(dig +short "$host" | grep -v '\.$' | sed -z 's|\n|,|g')$host"
            ssh-keyscan -H "$hosts" > ~/.ssh/known_hosts

        - name: Install depends
          run: |
            sudo apt update
            sudo apt-get install -y expect-dev python2 git git-lfs expect-dev debianutils sed make binutils build-essential gcc g++ bash patch gzip bzip2 perl tar cpio unzip rsync file bc git device-tree-compiler

        - name: Submodules init
          working-directory: ./buildroot-rk3588
          run: |
            git submodule init
            git submodule sync
            git submodule update --recursive --remote

        - name: Clean
          working-directory: ./buildroot-rk3588/buildroot
          run: make clean 

        - name: Configure Buildroot
          working-directory: ./buildroot-rk3588/buildroot
          # if: always()
          run: |
            make BR2_EXTERNAL=../external rock5b_defconfig
            if [ $( ls "br.log" ) ]; then rm br.log; fi

        - name: Build Buildroot
          working-directory: ./buildroot-rk3588/buildroot
          # WARNING: Uncomment one!
          
          # NOTE: for full print build log: 'make' command
          # run: make -j16
          
          # NOTE: for minimum print log during build
          run: utils/brmake

        - name: Run legal-info
          working-directory: ./buildroot-rk3588/buildroot
          run: make legal-info

        - name: Create SDK 
          working-directory: ./buildroot-rk3588/buildroot
          run: make sdk

        - name: Copy artifacts
          working-directory: ./buildroot-rk3588/buildroot
          run: | 
            mkdir -p ~/artifacts
            cp -v output/images/sdcard.img ~/artifacts
            mkdir -p ~/sdk
            cp -v output/images/*sdk*.tar.gz ~/sdk

        - name: Copy full build log
          working-directory: ./buildroot-rk3588/buildroot
          if: always()
          run: | 
            mkdir -p ~/build-log
            cp -v br.log ~/build-log

        - name: Upload build log from Github Actions
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: build-log
            path: ~/build-log/br.log

        - name: Upload image from GitHub Action
          uses: actions/upload-artifact@v3
          with: 
            name: image
            path: ~/artifacts

        - name: Upload SDK from GitHub Action
          uses: actions/upload-artifact@v3
          with: 
            name: sdk
            path: ~/sdk
            
        - name: Application Version
          if: ${{ env.isRelease == 'true' }}
          id: version
          uses: paulhatch/semantic-version@v5.0.0-beta
          with:
            tag_prefix: ""
            version_format: "${major}.${minor}.${patch}"
            search_commit_body: true
            bump_each_commit: false

        - name: Merge message
          if: ${{ env.isRelease == 'true' }}
          id: merge-message
          run: |
            git log --format=%B -n 1 ${{github.event.pull_request.merge_commit_sha}} > __last.commit.message

        - name: Create Release
          if: ${{ env.isRelease == 'true' }}
          id: create_release
          uses: softprops/action-gh-release@v1
          with:
            name: Release ${{ github.ref }}
            body_path: __last.commit.message
            draft: false
            prerelease: false
            generate_release_notes: true
            tag_name: ${{ steps.version.outputs.version_tag }}
            files: |
              output/images/sdcard.img
              output/images/*sdk*.tar.gz
